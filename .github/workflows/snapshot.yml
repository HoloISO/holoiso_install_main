name: Build snapshot
on:
  push:
  pull_request:

jobs:
  build:
    runs-on: ubuntu-latest
    container:
      image: archlinux:latest
      options: --privileged
    steps:
      - uses: actions/checkout@v2
      
      - name: Prepare pacman keyring
        run: |
          pacman-key --init
          pacman --noconfirm -Sy archlinux-keyring base-devel fakeroot dos2unix wget
          find . -type f -print0 | xargs -0 dos2unix
          chown -R nobody:nobody .
          pacman --noconfirm -S $(grep makedepends PKGBUILD | cut -d '=' -f 2 | sed 's/(//g' | sed 's/)//g' |tr -d \'\")
          
      - name: Build Arch package
        run: |
          su -s /bin/bash nobody -c "makepkg -s --nodeps && mkdir pkgout && mv *.tar.zst pkgout"

      - name: Set current package distribution variables
        run: |
          echo "PKGNAME=$(grep pkgname PKGBUILD | cut -d "=" -f 2)" >> $GITHUB_ENV
          echo "VER=$(grep pkgname PKGBUILD | cut -d "=" -f 2)-snapshot$(date +%Y%m%d.%H%M)-1-x86_64_CI" >> $GITHUB_ENV

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ env.VER }}
          release_name: ${{ env.VER }}
          draft: false
          prerelease: false
      - name: Upload Release Asset
        id: upload-release-asset 
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps 
          asset_path: pkg/${{ env.PKGNAME }}/*
          asset_name: ${{ env.VER }}.zip
          asset_content_type: application/zip

          
      - uses: actions/upload-artifact@v2
        with:
          name: ${{ env.VER }}
          path: pkg/${{ env.PKGNAME }}/*
